{
  "extends": "./tsconfig-nodejs.json",
  "compilerOptions": {
    // "allowJs": true,                       /* Allow javascript files to be compiled. */
    // "sourceMap": true,                     /* Generates corresponding '.map' file. */
    // "outFile": "./",                       /* Concatenate and emit output to single file. */
    // "composite": true,                     /* Enable project compilation */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    /* Module Resolution Options */
	"moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
	"resolveJsonModule": true,
    "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    // "types": [],                           /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "esModuleInterop": true,                 /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
	// "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */
	"noImplicitAny": false,
	"noImplicitThis": true,
	"alwaysStrict": true,
	"strictNullChecks": false,
	"strictFunctionTypes": true,
	"strictPropertyInitialization": false
  },
//   "include": [
//     "./test-e2e/**/*.ts",
// 	"./src/**/*.ts",
// 	"**/*.ts"
//   ],
  "exclude": [
	"node_modules",
	"dist"
  ],
  "files": [
	"./test-e2e/src/nodejs/main-sync.ts"
  ],
//    "paths": {
//    	 "@core/*": ["./src/*"],
//      "@nodejs/*": ["./src/nodejs/*"],
//      "@nodejs": ["./src/nodejs"],
//      "@browser/*": ["./src/browser/*"]
//    }
}
